{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/lib/prisma.js"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nexport const prisma = globalThis.prisma || new PrismaClient()\n\nif (process.env.NODE_ENV !== 'production') globalThis.prisma = prisma"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,WAAW,MAAM,IAAI,IAAI,6IAAA,CAAA,eAAY;AAE3D,wCAA2C,WAAW,MAAM,GAAG"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/lib/data.js"],"sourcesContent":["import { prisma } from '@/lib/prisma'\n\nexport async function getUserById(id) {\n  const user = await prisma.user.findUnique({\n    where: { id }\n  });\n  return user\n}\n\nexport async function getUserByEmail(email) {\n  const user = await prisma.user.findUnique({\n    where: { email }\n  });\n  return user\n}"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,YAAY,EAAE;IAClC,MAAM,OAAO,MAAM,oHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO;YAAE;QAAG;IACd;IACA,OAAO;AACT;AAEO,eAAe,eAAe,KAAK;IACxC,MAAM,OAAO,MAAM,oHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO;YAAE;QAAM;IACjB;IACA,OAAO;AACT"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/auth.config.js"],"sourcesContent":["import Google from \"@auth/core/providers/google\"\nimport GitHub from '@auth/core/providers/github'\nimport Discord from '@auth/core/providers/discord'\nimport Credentials from \"@auth/core/providers/credentials\"\nimport { getUserByEmail } from \"@/lib/data\"\n\nexport default {\n    providers: [\n        Google,\n        GitHub,\n        Discord,\n        Credentials({\n            async authorize(credentials) {\n                console.log('AUTHORIZE')\n                const user = await getUserByEmail(credentials.email)\n                return user\n            },\n        }),\n    ]\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;uCAEe;IACX,WAAW;QACP,qJAAA,CAAA,UAAM;QACN,qJAAA,CAAA,UAAM;QACN,sJAAA,CAAA,UAAO;QACP,CAAA,GAAA,0JAAA,CAAA,UAAW,AAAD,EAAE;YACR,MAAM,WAAU,WAAW;gBACvB,QAAQ,GAAG,CAAC;gBACZ,MAAM,OAAO,MAAM,CAAA,GAAA,kHAAA,CAAA,iBAAc,AAAD,EAAE,YAAY,KAAK;gBACnD,OAAO;YACX;QACJ;KACH;AACL"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.js"],"sourcesContent":["// Run on edge\nimport NextAuth from \"next-auth\";\nimport authConfig from \"@/auth.config\";\n\nconst { auth } = NextAuth(authConfig);\n\n\nexport default auth((req) => {\n  console.log(`MIDDLEWARE`, req.nextUrl.pathname, req.auth);\n\n  if (!req.auth) {\n    const callbackUrl = req.nextUrl.pathname + req.nextUrl.search\n    const encodedCallbackUrl = encodeURIComponent(callbackUrl);\n\n    return Response.redirect(req.nextUrl.origin + `/auth/login?callbackUrl=${encodedCallbackUrl}`)\n  }\n})\n\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - images\n     * - auth\n     * - about\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico, sitemap.xml, robots.txt (metadata files)\n     * - $ (home page)\n     */\n    '/((?!api|images|auth|about|_next/static|_next/image|favicon.ico|sitemap.xml|robots.txt|$).*)',\n  ],\n}\n\n// export const config = {\n//   matcher: [\n//     \"/dashboard(.*)\",\n//     \"/admin(.*)\",\n//     \"/proveedores(.*)\",\n//     \"/productos(.*)\",\n//   ],\n// };"],"names":[],"mappings":"AAAA,cAAc;;;;;AACd;AACA;AADA;;;AAGA,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAQ,AAAD,EAAE,qHAAA,CAAA,UAAU;uCAGrB,KAAK,CAAC;IACnB,QAAQ,GAAG,CAAC,CAAC,UAAU,CAAC,EAAE,IAAI,OAAO,CAAC,QAAQ,EAAE,IAAI,IAAI;IAExD,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,MAAM,cAAc,IAAI,OAAO,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,MAAM;QAC7D,MAAM,qBAAqB,mBAAmB;QAE9C,OAAO,SAAS,QAAQ,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,wBAAwB,EAAE,oBAAoB;IAC/F;AACF;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;;;;;KAUC,GACD;KACD;AACH,EAEA,0BAA0B;CAC1B,eAAe;CACf,wBAAwB;CACxB,oBAAoB;CACpB,0BAA0B;CAC1B,wBAAwB;CACxB,OAAO;CACP,KAAK"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}